-- Pour ce TP, nous travaillerons sous PostgreSQL./* *********************************        Niveau débutant :************************************ */-- Sélection, projection, tri-- 1-Donner les références des produits.SELECT REF_PRODUIT FROM PRODUITS;-- 59 lignes-- 2-Donner le code et la société des clients.SELECT CODE_CLIENT, SOCIETE FROM CLIENTS;-- 38 lignes-- 3-Donner le code des clients qui ont commandé des produits.SELECT DISTINCT CODE_CLIENT FROM COMMANDES;-- 37 lignes	-- 4-Donner la référence des produits de la commande n°10254.SELECT REF_PRODUIT FROM DETAILS_COMMANDESWHERE NO_COMMANDE = 10254;-- 1 ligne : 74-- 5-Donner le nom et la catégorie des sociétés lyonnaises ou nantaises (Nantes) de catégorie supérieure ou égale à 2. Triez-les par catégorie.SELECT SOCIETE, CATEGORIE FROM CLIENTSWHERE (VILLE = 'Lyon' OR VILLE = 'Nantes') AND CATEGORIE > 1ORDER BY 2;/* 2 étant le numéro de la colonne concernée*/ -- 3 lignes-- 6-Donner la liste des produits triée par prix décroissant puis par nom croissant.SELECT NOM_PRODUIT, PRIX_UNITAIRE FROM PRODUITSORDER BY PRIX_UNITAIRE DESC, NOM_PRODUIT ASC;-- 59 lignes-- 7-Afficher les informations des sociétés dont le nom commence par C.SELECT * FROM CLIENTS WHERE SOCIETE LIKE 'C%';-- 3 lignes-- Opérateurs ensemblistes-- 8-Donner la référence des produits dont le nom contient 'Sauce'-- ou qui ont été commandé avec une quantité comprise entre 50 et 60-- (bornes non incluses).-- (union)SELECT REF_PRODUIT FROM PRODUITS WHERE NOM_PRODUIT LIKE '%Sauce%'UNIONSELECT REF_PRODUIT FROM DETAILS_COMMANDESWHERE QUANTITE > 50 AND QUANTITE < 60;-- 3 lignes-- 9-Donner le code des clients qui n'ont pas commandé. 	-- (différence ou NOT IN)SELECT CODE_CLIENT FROM CLIENTS EXCEPTSELECT CODE_CLIENT FROM COMMANDES;-- 1 ligne : FISSA-- Dépend du SGBD (EXCEPT) :-- 10-Donner le numéro des commandes du 2009-10-29 et qui ont commandé le produit 21. -- (intersection ou IN)SELECT NO_COMMANDE FROM COMMANDESWHERE DATE_COMMANDE = '2009-10-29'INTERSECTSELECT NO_COMMANDE FROM DETAILS_COMMANDESWHERE REF_PRODUIT = 21;-- 2 lignes-- Jointures :-- 11-Donner pour chaque commande, son numéro, sa date ainsi que la société, le pays et la catégorie du client. SELECT NO_COMMANDE, DATE_COMMANDE, SOCIETE, PAYS, CATEGORIE FROM CLIENTS CJOIN COMMANDES CO ON CO.CODE_CLIENT = C.CODE_CLIENT;-- 339 lignes-- 12-Donner la date, le code, la société, le pays et la catégorie du client numéro 10258 SELECT DATE_COMMANDE, C.CODE_CLIENT, SOCIETE, PAYS, CATEGORIE FROM CLIENTS CJOIN COMMANDES CO ON CO.CODE_CLIENT = C.CODE_CLIENTWHERE NO_COMMANDE = 10258;-- 1 ligne-- 13-Donner la référence, le prix unitaire, la quantité et le montant total (prix*quantité) des produits de la commande n°10258. SELECT P.REF_PRODUIT, PRIX_UNITAIRE, QUANTITE, PRIX_UNITAIRE*QUANTITE AS TOTALFROM PRODUITS P JOIN DETAILS_COMMANDES D ON D.REF_PRODUIT = P.REF_PRODUITWHERE NO_COMMANDE = 10258;-- 3 lignes-- 14-Donner les références des produits commandés par des sociétés suisses.SELECT REF_PRODUITFROM DETAILS_COMMANDES DJOIN COMMANDES C ON C.NO_COMMANDE = D.NO_COMMANDEJOIN CLIENTS CL ON CL.CODE_CLIENT = C.CODE_CLIENTWHERE PAYS = 'Suisse';-- 12 lignes-- Agrégations-- 15-Donner le nombre de clients français.SELECT COUNT(CODE_CLIENT)FROM CLIENTSWHERE PAYS = 'France';-- 1 ligne : 7-- 16-Donner le nombre de clients qui ont commandé des produits.SELECT COUNT(DISTINCT CODE_CLIENT)FROM COMMANDES;-- 1 ligne : 37-- 17-Donner le prix moyen des produits.SELECT AVG(PRIX_UNITAIRE) FROM PRODUITS;-- 1 ligne : 129.88/* *********************************        Niveau intermédiaire :************************************ */-- 18-Donner les pays dans lesquels se trouvent des clients de catégorie 1 ou 2.-- Trier-les par ordre alphabétique.SELECT PAYSFROM CLIENTSWHERE CATEGORIE = 1 OR CATEGORIE = 2ORDER BY PAYS;-- 11 lignes-- 19-Donner le numéro des commandes contenant les produits 30 ou 74.SELECT NO_COMMANDEFROM DETAILS_COMMANDESWHERE REF_PRODUIT= 30 OR REF_PRODUIT=74; -- 13 lignes-- 20-Donner le numéro des commandes contenant les produits 30 et 74.SELECT NO_COMMANDEFROM DETAILS_COMMANDESWHERE REF_PRODUIT= 30INTERSECTSELECT NO_COMMANDEFROM DETAILS_COMMANDESWHERE REF_PRODUIT = 74;-- 1 ligne : 10263-- 21-Donner le code des clients espagnols qui n'ont pas commandé.-- Donner 3 écritures.SELECT CODE_CLIENTFROM CLIENTSWHERE PAYS = 'Espagne'EXCEPTSELECT CODE_CLIENTFROM COMMANDES;SELECT CODE_CLIENTFROM CLIENTSWHERE PAYS = 'Espagne' AND CODE_CLIENT NOT IN (SELECT CODE_CLIENT FROM COMMANDES);SELECT CL.CODE_CLIENTFROM COMMANDES CORIGHT JOIN CLIENTS CL ON CO.CODE_CLIENT = CL.CODE_CLIENTWHERE PAYS = 'Espagne' AND (NO_COMMANDE IS NULL);-- 1 ligne : FISSA-- 22-Donner le numéro des commandes de aout 2008 des clients-- habitant au Royaume-Uni ou à Toulouse.-- Afficher le jour de la commande.-- Utiliser TO_CHAR()SELECT NO_COMMANDE, TO_CHAR(DATE_COMMANDE, 'DD')FROM COMMANDES COJOIN CLIENTS CL ON CL.CODE_CLIENT = CO.CODE_CLIENTWHERE (VILLE = 'Toulouse' OR PAYS = 'Royaume-Uni') AND TO_CHAR(DATE_COMMANDE, 'YYYY-MM') LIKE '2008-08';-- 3 lignes-- 23-Donner le code et le pays des clients ayant commandé le produit n°31.-- Afficher le pays sous cette forme : Aut. (3 premières lettres + point).SELECT DISTINCT CL.CODE_CLIENT, CONCAT(LEFT(PAYS, 3), '.') AS PAYSFROM CLIENTS CL JOIN COMMANDES CO ON CO.CODE_CLIENT = CL.CODE_CLIENTJOIN DETAILS_COMMANDES D ON D.NO_COMMANDE = CO.NO_COMMANDEWHERE REF_PRODUIT = 31;-- 14 lignes-- 24-Donner le code et la société des clients de catégorie 1 avec le numéro de leurs commandes-- (on veut afficher tous les clients même ceux qui n'ont pas encore de commande).-- Trier les lignes par société puis par numéro de commande décroissant.SELECT CL.CODE_CLIENT, SOCIETE, CO.NO_COMMANDEFROM CLIENTS CL FULL JOIN COMMANDES CO ON CO.CODE_CLIENT = CL.CODE_CLIENTWHERE CATEGORIE = 1ORDER BY SOCIETE ASC, NO_COMMANDE DESC-- 97 lignes-- 25- erreur-- 26-Donner la référence des produits qui coûtent plus de 300€ ou qui ont été commandés par 50.-- (union ou jointure)SELECT REF_PRODUITFROM PRODUITSWHERE PRIX_UNITAIRE > 300UNIONSELECT REF_PRODUITFROM DETAILS_COMMANDESWHERE QUANTITE = 50;SELECT DISTINCT P.REF_PRODUITFROM PRODUITS PLEFT JOIN DETAILS_COMMANDES D ON D.REF_PRODUIT = P.REF_PRODUITWHERE QUANTITE = 50 OR PRIX_UNITAIRE > 300;-- 17 lignes-- 27-Donner la référence des produits qui coûtent plus de 300€ et qui ont été commandés par 50.-- (intersection ou jointure)SELECT REF_PRODUITFROM PRODUITSWHERE PRIX_UNITAIRE > 300INTERSECTSELECT REF_PRODUITFROM DETAILS_COMMANDESWHERE QUANTITE = 50;SELECT DISTINCT P.REF_PRODUITFROM PRODUITS PLEFT JOIN DETAILS_COMMANDES D ON D.REF_PRODUIT = P.REF_PRODUITWHERE QUANTITE = 50 AND PRIX_UNITAIRE > 300;-- 2 lignes-- 28-Donner le numéro et le nom des produits qui n'ont pas été commandés.-- (plusieurs solutions dont anti-jointure)SELECT REF_PRODUIT, NOM_PRODUITFROM PRODUITSWHERE REF_PRODUIT NOT IN (SELECT REF_PRODUIT FROM DETAILS_COMMANDES);SELECT P.REF_PRODUIT, NOM_PRODUITFROM PRODUITS PLEFT JOIN DETAILS_COMMANDES D ON P.REF_PRODUIT = D.REF_PRODUITWHERE (NO_COMMANDE IS NULL);-- 1 ligne : 18-- 29-Donner le numéro et la date des commandes contenant les produits 30 et 74.SELECT CO.NO_COMMANDE, DATE_COMMANDEFROM COMMANDES COJOIN DETAILS_COMMANDES D ON D.NO_COMMANDE = CO.NO_COMMANDEWHERE REF_PRODUIT = 30INTERSECTSELECT CO.NO_COMMANDE, DATE_COMMANDEFROM COMMANDES COJOIN DETAILS_COMMANDES D ON D.NO_COMMANDE = CO.NO_COMMANDEWHERE REF_PRODUIT = 74;-- 1 ligne : 10263-- 30-Donner les sociétés dont le pays est le même que celui du client FRANS.SELECT SOCIETEFROM CLIENTS WHERE PAYS = (SELECT PAYS FROM CLIENTS WHERE CODE_CLIENT = 'FRANS') AND CODE_CLIENT != 'FRANS';-- 2 lignes-- 31-Donner les produits dont le prix est supérieur au prix moyen des produits.SELECT NOM_PRODUITFROM PRODUITSWHERE PRIX_UNITAIRE > (SELECT AVG(PRIX_UNITAIRE) FROM PRODUITS);-- 21 lignes-- 32-Donner le nombre de clients qui ont commandé le produit n° 31.SELECT COUNT(DISTINCT COMMANDES.CODE_CLIENT)FROM COMMANDESJOIN DETAILS_COMMANDES ON DETAILS_COMMANDES.NO_COMMANDE = COMMANDES.NO_COMMANDEWHERE REF_PRODUIT = 31;-- 1 ligne : 14-- 33-Donner la référence et le nom du ou des produits les plus chers.SELECT REF_PRODUIT, NOM_PRODUITFROM PRODUITSWHERE PRIX_UNITAIRE = (SELECT MAX(PRIX_UNITAIRE) FROM PRODUITS);-- 1 ligne : 9-- 34-Donner le nombre de clients de catégorie 0 ou 1 par pays (sauf la France).-- Trier par nombre décroissant.SELECT COUNT(CODE_CLIENT), PAYSFROM CLIENTSWHERE (CATEGORIE=0 OR CATEGORIE=1) AND PAYS!='France'GROUP BY PAYSORDER BY 1 DESC;-- 9 lignes-- 35-Donner le nombre de clients par pays et par catégorie.-- Trier par pays, catégorie.SELECT COUNT(CODE_CLIENT) AS NOMBRE, CATEGORIE, PAYSFROM CLIENTSGROUP BY PAYS, CATEGORIEORDER BY PAYS, CATEGORIE;-- 24 lignes-- 36-Donner les pays ayant des sociétés d'au moins 2 catégories différentes.SELECT PAYSFROM CLIENTSGROUP BY PAYSHAVING COUNT(DISTINCT CATEGORIE) >= 2;-- 6 lignes-- 37-Donner le nombre de produits total (en fonction de la quantité)-- par commande (uniquement si au moins 4 références différentes).SELECT SUM(QUANTITE) AS TOTAL, NO_COMMANDEFROM DETAILS_COMMANDESGROUP BY NO_COMMANDEHAVING COUNT(DISTINCT REF_PRODUIT) > 3;-- 21 lignes-- 38-Donner le numéro des commandes dont le montant est supérieur à 20000-- (afficher le montant total de la facture).-- Vérifier le résultat pour une facture.SELECT NO_COMMANDE, SUM(QUANTITE*PRIX_UNITAIRE) AS TOTALFROM DETAILS_COMMANDES DJOIN PRODUITS P ON P.REF_PRODUIT = D.REF_PRODUITGROUP BY NO_COMMANDEHAVING SUM(QUANTITE*PRIX_UNITAIRE) > 20000;-- 9 lignes-- 39-Donner le numéro et la date des commandes avec au moins 4 références différentes.SELECT C.NO_COMMANDE, DATE_COMMANDEFROM COMMANDES CJOIN DETAILS_COMMANDES D ON D.NO_COMMANDE = C.NO_COMMANDEGROUP BY C.NO_COMMANDEHAVING COUNT(REF_PRODUIT) > 3;-- 21 lignes/* *********************************        Niveau avancé :************************************ */-- 40-Donner les produits commandés en même quantité dans une même commande-- (uniquement si la quantité est supérieure à 45).-- On veut le numéro de commande, la quantité et les 2 références.SELECT D1.NO_COMMANDE, D1.QUANTITE, D1.REF_PRODUIT, D2.REF_PRODUITFROM DETAILS_COMMANDES D1JOIN DETAILS_COMMANDES D2 ON D1.NO_COMMANDE = D2.NO_COMMANDEWHERE D1.QUANTITE > 45 AND D1.QUANTITE = D2.QUANTITE AND D1.REF_PRODUIT!=D2.REF_PRODUIT AND D1.REF_PRODUIT > D2.REF_PRODUIT;-- 4 lignes-- 41-Donner pour chaque produit, les produits qui coutent 10€ de plus.-- Afficher les références et les prix des produits.-- Trier par produit.-- 30 lignes-- 42-Requête 21 avec un NOT EXISTS.-- Forme : SELECT ... FROM ... WHERE EXISTS / NOT EXISTS (SELECT * FROM ... WHERE ...)-- Il y a toujours un lien entre les deux sous-requêtes (grâce à la notation pointée).-- 1 ligne : FISSA-- 43-Donner le numéro des commandes contenant tous les produits qui coutent 105€.-- 1 ligne : 10698-- 44-Donner la référence des produits qui sont dans toutes les commandes de FRANR.-- 1 ligne : 62-- 45-Donner la référence du produit qui a été le plus commandé (en fonction de la quantité).-- (sans utiliser LIMIT)-- 1 ligne : 31-- 46-Donner le numéro des commandes de 2010 (avec le code des clients) contenant tous les produits les plus chers.-- 1 ligne : 10848